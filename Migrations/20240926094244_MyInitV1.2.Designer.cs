// <auto-generated />
using System;
using Gymany_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gymany_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240926094244_MyInitV1.2")]
    partial class MyInitV12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gymany_API.Models.Admin", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("admin_age")
                        .HasColumnType("datetime2");

                    b.Property<string>("admin_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("admin_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("admin_password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("admin_salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("admin_username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("admin_id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Gymany_API.Models.Cart", b =>
                {
                    b.Property<int>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cart_quantity")
                        .HasColumnType("int");

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<int>("prod_id")
                        .HasColumnType("int");

                    b.HasKey("cart_id");

                    b.HasIndex("cus_id");

                    b.HasIndex("prod_id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Gymany_API.Models.Category", b =>
                {
                    b.Property<int>("cate_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cate_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cate_img")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cate_type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("cate_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Gymany_API.Models.Course", b =>
                {
                    b.Property<int>("course_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("course_description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("course_episode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("course_title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<int>("pt_id")
                        .HasColumnType("int");

                    b.Property<int>("workout_id")
                        .HasColumnType("int");

                    b.HasKey("course_id");

                    b.HasIndex("cus_id");

                    b.HasIndex("pt_id");

                    b.HasIndex("workout_id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Gymany_API.Models.Customer", b =>
                {
                    b.Property<int>("cus_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cus_address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("cus_age")
                        .HasColumnType("datetime2");

                    b.Property<string>("cus_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("cus_image")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cus_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("cus_password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("cus_phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("cus_username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("cus_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Gymany_API.Models.Examination", b =>
                {
                    b.Property<int>("exam_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<string>("exam_question")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("exam_title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("pt_id")
                        .HasColumnType("int");

                    b.HasKey("exam_id");

                    b.HasIndex("course_id");

                    b.HasIndex("pt_id");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("Gymany_API.Models.Exercise", b =>
                {
                    b.Property<int>("exc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("exc_description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("exc_guide")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("exc_title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("exc_video")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("exc_id");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("Gymany_API.Models.Lession", b =>
                {
                    b.Property<int>("lession_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<string>("lession_context")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lesson_topic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("lession_id");

                    b.HasIndex("course_id");

                    b.ToTable("Lessions");
                });

            modelBuilder.Entity("Gymany_API.Models.Notification", b =>
                {
                    b.Property<int>("noti_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<string>("noti_context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("noti_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("noti_type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("pt_id")
                        .HasColumnType("int");

                    b.HasKey("noti_id");

                    b.HasIndex("cus_id");

                    b.HasIndex("pt_id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Gymany_API.Models.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<int>("order_quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("order_startDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("order_status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("order_totalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("prod_id")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("cus_id");

                    b.HasIndex("prod_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gymany_API.Models.Payment", b =>
                {
                    b.Property<int>("pay_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("pay_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("pay_quantity")
                        .HasColumnType("int");

                    b.Property<int>("prod_id")
                        .HasColumnType("int");

                    b.HasKey("pay_id");

                    b.HasIndex("cus_id");

                    b.HasIndex("prod_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Gymany_API.Models.PersonalTrainer", b =>
                {
                    b.Property<int>("pt_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pt_address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("pt_age")
                        .HasColumnType("datetime2");

                    b.Property<string>("pt_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("pt_img")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("pt_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("pt_password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("pt_phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("pt_salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pt_username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("pt_id");

                    b.ToTable("PersonalTrainers");
                });

            modelBuilder.Entity("Gymany_API.Models.Post", b =>
                {
                    b.Property<int>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("admin_id")
                        .HasColumnType("int");

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<string>("post_content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("post_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("post_img")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("post_title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("pt_id")
                        .HasColumnType("int");

                    b.HasKey("post_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("cus_id");

                    b.HasIndex("pt_id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Gymany_API.Models.Product", b =>
                {
                    b.Property<int>("prod_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cate_id")
                        .HasColumnType("int");

                    b.Property<int?>("prod_amount")
                        .HasColumnType("int");

                    b.Property<string>("prod_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prod_img")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("prod_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("prod_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("prod_id");

                    b.HasIndex("cate_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Gymany_API.Models.SystemAdmin", b =>
                {
                    b.Property<int>("sysad_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("sysad_age")
                        .HasColumnType("datetime2");

                    b.Property<string>("sysad_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sysad_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sysad_password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sysad_username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("sysad_id");

                    b.ToTable("SystemAdmins");
                });

            modelBuilder.Entity("Gymany_API.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("workout_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<int>("exc_id")
                        .HasColumnType("int");

                    b.Property<int>("pt_id")
                        .HasColumnType("int");

                    b.Property<string>("workout_activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workout_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("workout_endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("workout_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("workout_session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("workout_startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("workout_id");

                    b.HasIndex("cus_id");

                    b.HasIndex("exc_id");

                    b.HasIndex("pt_id");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("Gymany_API.Models.Cart", b =>
                {
                    b.HasOne("Gymany_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("prod_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Gymany_API.Models.Course", b =>
                {
                    b.HasOne("Gymany_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.PersonalTrainer", "PersonalTrainer")
                        .WithMany()
                        .HasForeignKey("pt_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany("Courses")
                        .HasForeignKey("workout_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("PersonalTrainer");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("Gymany_API.Models.Examination", b =>
                {
                    b.HasOne("Gymany_API.Models.Course", "Course")
                        .WithMany("Examinations")
                        .HasForeignKey("course_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.PersonalTrainer", "PersonalTrainer")
                        .WithMany()
                        .HasForeignKey("pt_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PersonalTrainer");
                });

            modelBuilder.Entity("Gymany_API.Models.Lession", b =>
                {
                    b.HasOne("Gymany_API.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("course_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Gymany_API.Models.Notification", b =>
                {
                    b.HasOne("Gymany_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.PersonalTrainer", "PersonalTrainer")
                        .WithMany()
                        .HasForeignKey("pt_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("PersonalTrainer");
                });

            modelBuilder.Entity("Gymany_API.Models.Order", b =>
                {
                    b.HasOne("Gymany_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("prod_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Gymany_API.Models.Payment", b =>
                {
                    b.HasOne("Gymany_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("prod_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Gymany_API.Models.Post", b =>
                {
                    b.HasOne("Gymany_API.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("admin_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.PersonalTrainer", "PersonalTrainer")
                        .WithMany()
                        .HasForeignKey("pt_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("PersonalTrainer");
                });

            modelBuilder.Entity("Gymany_API.Models.Product", b =>
                {
                    b.HasOne("Gymany_API.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("cate_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Gymany_API.Models.WorkoutPlan", b =>
                {
                    b.HasOne("Gymany_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("exc_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymany_API.Models.PersonalTrainer", "PersonalTrainer")
                        .WithMany()
                        .HasForeignKey("pt_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Exercise");

                    b.Navigation("PersonalTrainer");
                });

            modelBuilder.Entity("Gymany_API.Models.Course", b =>
                {
                    b.Navigation("Examinations");
                });

            modelBuilder.Entity("Gymany_API.Models.WorkoutPlan", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
